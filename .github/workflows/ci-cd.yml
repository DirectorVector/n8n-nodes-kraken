name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Check formatting
      run: npm run format:check

    - name: Build project
      run: npm run build

    - name: Security audit
      run: npm audit --audit-level high

    - name: Run all tests
      run: npm run test

    - name: Verify build artifacts
      run: |
        echo "Verifying build artifacts exist..."
        ls -la dist/
        ls -la dist/nodes/Kraken/
        ls -la dist/credentials/

    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-node-${{ matrix.node-version }}
        path: |
          dist/
          package.json
        retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level high

    - name: Check for vulnerabilities
      run: npm audit --audit-level moderate --json | jq '.vulnerabilities | length'

  publish:
    name: Publish to NPM
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build

    - name: Run final tests
      run: npm run test

    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create deployment summary
      run: |
        echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "Package: \`n8n-nodes-kraken\`" >> $GITHUB_STEP_SUMMARY
        echo "Version: \`$(node -p "require('./package.json').version")\`" >> $GITHUB_STEP_SUMMARY
        echo "Release: ${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
        echo "Published to: [NPM Registry](https://www.npmjs.com/package/n8n-nodes-kraken)" >> $GITHUB_STEP_SUMMARY

  pr-comment:
    name: PR Test Results
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Comment PR
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });

          const botComment = comments.find(comment =>
            comment.user.type === 'Bot' &&
            comment.body.includes('ðŸ§ª Test Results')
          );

          const body = `## ðŸ§ª Test Results

          âœ… **All tests passed successfully!**

          ### Test Coverage
          - âœ… Linting and formatting checks
          - âœ… TypeScript compilation
          - âœ… Kraken API connectivity tests
          - âœ… Enhanced Asset Pairs functionality
          - âœ… Comprehensive integration tests
          - âœ… Security audit

          ### Build Status
          - âœ… Build artifacts generated successfully
          - âœ… Node.js compatibility verified (20.x, 22.x)

          The code is ready for review and merge! ðŸš€
          `;

          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: body
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          }
